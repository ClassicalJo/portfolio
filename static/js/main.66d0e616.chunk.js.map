{"version":3,"sources":["components/common/Context.jsx","components/common/scrollTo.js","components/common/Slide.jsx","components/contact/Button.jsx","components/contact/SmolButton.jsx","components/common/Wrapper.jsx","components/contact/Card.jsx","components/common/useOnScreen.jsx","components/contact/Contact.jsx","components/home/Home.jsx","components/skills/hex.js","components/skills/title.js","components/skills/Hexagon.jsx","components/skills/animation.js","components/skills/Skills.jsx","components/tags/title.js","components/tags/tag.js","components/tags/cloud.js","components/tags/Chart.jsx","components/tags/animation.js","components/tags/Tags.jsx","components/common/Loading.jsx","components/header/Header.jsx","components/common/Loader.jsx","components/common/Container.jsx","components/App.js","index.js"],"names":["Context","createContext","animateScroll","element","target","distance","scrollHeight","scrollTop","origin","p","animate","requestAnimationFrame","x","point","scrollTo","scroll","Math","cos","PI","Slide","children","className","Button","onClick","SmolButton","onCopy","Wrapper","Card","toggle","mailRef","useRef","href","type","defaultValue","ref","current","select","document","execCommand","blur","useOnScreen","useState","isIntersecting","setIntersecting","observer","useMemo","IntersectionObserver","entry","threshold","useEffect","observe","disconnect","Contact","show","setShow","isVisible","shown","setShown","toggleCard","rel","Home","ease","sin","Hex","rx","ry","values","this","time","lifetime","totalTime","vertices","setVertices","lineOpacity","Array","fill","map","k","i","vertex","getPosition","animatedRadius","r","angle","y","col","ctx","beginPath","forEach","lineTo","grad","createRadialGradient","max","addColorStop","fillStyle","setLineDash","strokeStyle","lineDashOffset","lineWidth","stroke","int","webMap","moveTo","font","cycle","min","opacity","index","textAlign","fillText","unit","a","b","c","getX","getY","color","web","lines","words","Title","text","align","pos","Hexagon","ready","canvasRef","useLayoutEffect","swirl","canvas","getContext","height","verticalMargin","width","horizontalMargin","setTransform","translate","bodies","update","render","fillRect","animation","role","Skills","strokeText","Tag","tag","size","canvasHeight","fontSize","abs","pow","Cloud","tags","nobodies","marginSize","makeTags","setTags","n","push","arr","acc","pushBody","Object","keys","total","length","splice","setPosition","uppermost","lowermost","shift","body","Chart","galaxy","cloud","JSON","stringify","Tags","Loading","viewBox","Circle","cx","cy","strokeWidth","attributeName","from","to","repeatCount","dur","calcMode","Header","useContext","Loader","setReady","done","setDone","WebFont","load","google","families","active","timeout","setTimeout","clearTimeout","Container","click","Provider","value","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.66d0e616.chunk.js","sourcesContent":["import { createContext } from 'react'\r\nexport let Context = createContext()\r\n","let ease = x => 1 - Math.cos(x * Math.PI / 2)\r\nlet scroll = (element, point) => element.scrollTo(0, point)\r\n\r\nconst animateScroll = (element, target) => {\r\n    let distance = target * element.scrollHeight - element.scrollTop\r\n    let origin = element.scrollTop\r\n    let p = 0\r\n    function animate() {\r\n        requestAnimationFrame(() => {\r\n            p += .05\r\n            scroll(element, origin + ease(p) * distance)\r\n            if (p < 1) animate()\r\n        })\r\n    }\r\n    animate()\r\n}\r\nexport default animateScroll\r\n","export default function Slide({ children }) {\r\n    return (\r\n        <div className=\"slide\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function Button({ children, onClick }) {\r\n    return (\r\n        <div className='button' onClick={onClick}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function SmolButton({ onClick, children, onCopy }) {\r\n    return (\r\n        <div className='smol-button' onClick={onClick} onCopy={onCopy}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function Wrapper({ children }) {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {children}\r\n        </div>)\r\n}\r\n","import { useRef} from \"react\"\r\nimport SmolButton from \"./SmolButton\"\r\nimport Wrapper from \"../common/Wrapper\"\r\n\r\nexport default function Card({ toggle }) {\r\n    let mailRef = useRef()\r\n\r\n    function copy() {\r\n        mailRef.current.select()\r\n        document.execCommand('copy')\r\n        mailRef.current.blur()\r\n    }\r\n    return (\r\n        <div className='card'>\r\n            <Wrapper>\r\n                <Wrapper>\r\n                    <div className=\"close\" onClick={toggle} ><p>✖</p></div>\r\n                    <div className=\"line\">\r\n                        <p><span>👨‍🦱</span>Jose Barrientos</p>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                        <p><span>🏡</span>Ciudad Autónoma de Buenos Aires, Argentina</p>                    </div>\r\n                    <div className=\"line\">\r\n                        <p>\r\n                            <span>📧</span>\r\n                            <a href=\"mailto:jb.barrientos@yahoo.com\">\r\n                                <input type=\"text\" defaultValue=\"jb.barrientos@yahoo.com\" ref={mailRef} />\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                    <SmolButton\r\n                        onClick={copy} ><p>Copy mail</p></SmolButton>\r\n                </Wrapper>\r\n            </Wrapper>\r\n        </div >\r\n    )\r\n}\r\n\r\n","//https://stackoverflow.com/questions/45514676/react-check-if-element-is-visible-in-dom\r\nimport { useEffect, useMemo, useState } from 'react'\r\n\r\nexport default function useOnScreen(ref) {\r\n    const [isIntersecting, setIntersecting] = useState(false)\r\n    const observer = useMemo(() => new IntersectionObserver(\r\n        ([entry]) => setIntersecting(entry.isIntersecting),\r\n        { threshold: .75 }\r\n    ), [])\r\n    useEffect(() => {\r\n        observer.observe(ref.current)\r\n        return () => { observer.disconnect() }\r\n    }, [observer, ref])\r\n    return isIntersecting\r\n}\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport Slide from \"../common/Slide\";\r\nimport Button from \"./Button\";\r\nimport Card from \"./Card\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\n\r\nexport default function Contact() {\r\n    let [show, setShow] = useState(false)\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) {\r\n            setShown(true)\r\n        }\r\n    }, [shown, isVisible])\r\n    let toggleCard = () => setShow(!show)\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!isVisible && !shown ? \"transparent\" : 'contact'}>\r\n                <Button><a href=\"cv.pdf\"><p>Resume</p></a></Button>\r\n                <Button >\r\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://classicaljo.github.io/projects\">\r\n                        <p>Projects</p>\r\n                    </a>\r\n                </Button>\r\n                <Button onClick={toggleCard}><p>Contact details</p></Button>\r\n                {show && <Card toggle={toggleCard} />}\r\n            </div>\r\n        </Slide>\r\n    )\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport Slide from \"../common/Slide\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\nimport Wrapper from \"../common/Wrapper\";\r\n\r\nexport default function Home() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) {\r\n            setShown(true)\r\n        }\r\n    }, [shown, isVisible])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!shown && !isVisible ? \"transparent\" : 'home'}>\r\n                <Wrapper>\r\n                    <p className='title'>\r\n                        hi\r\n                    </p>\r\n                    <p className='subtitle'>\r\n                        i'm Joe.\r\n                    </p>\r\n                </Wrapper>\r\n            </div>\r\n        </Slide >\r\n    )\r\n}\r\n","let ease = x => Math.sin((x * Math.PI) / 2)\r\n\r\nexport class Hex {\r\n    constructor(rx, ry, values = [1, 1, 1, 1, 1, 1]) {\r\n        this.values = values\r\n        this.rx = rx\r\n        this.ry = ry\r\n        this.time = 0\r\n        this.lifetime = 0\r\n        this.totalTime = 48\r\n        this.vertices = this.setVertices()\r\n        this.lineOpacity = 0\r\n    }\r\n    setVertices() {\r\n        return new Array(6)\r\n            .fill(\"\")\r\n            .map((k, i) => Math.PI * 2 / 6 * i + Math.PI / 2)\r\n            .map((vertex, i) => this.getPosition(\r\n                vertex,\r\n                this.animatedRadius(this.rx),\r\n                this.ry\r\n            ))\r\n    }\r\n    animatedRadius(r) {\r\n        return ease(this.time / this.totalTime) * r\r\n    }\r\n    getPosition(angle, rx, ry) {\r\n        return { x: rx * Math.cos(angle), y: ry * Math.sin(angle) }\r\n    }\r\n    color(x, y, col, ctx) {\r\n        ctx.beginPath()\r\n        this.vertices.forEach((k, i) => ctx.lineTo(k.x * this.values[i], k.y * this.values[i]))\r\n        ctx.lineTo(this.vertices[0].x * this.values[0], this.vertices[0].y * this.values[0])\r\n        let grad = ctx.createRadialGradient(x, y, 2 * Math.max(this.rx, this.ry), x, y, 2 * Math.max(this.rx, this.ry) / 10)\r\n        grad.addColorStop(.2, \"rgba(255,255,255,0)\")\r\n        grad.addColorStop(1, col)\r\n        ctx.fillStyle = grad\r\n        ctx.fill()\r\n    }\r\n    lines(ctx) {\r\n        ctx.beginPath()\r\n        this.vertices.forEach(k => ctx.lineTo(k.x, k.y))\r\n        ctx.lineTo(this.vertices[0].x, this.vertices[0].y)\r\n        ctx.setLineDash([350, 200])\r\n        ctx.strokeStyle = `rgba(0,0,0,${this.lineOpacity / 100})`\r\n        ctx.lineDashOffset = -this.lifetime * 2.5\r\n        ctx.lineWidth = 3\r\n        ctx.stroke()\r\n    }\r\n    web(ctx) {\r\n        ctx.setLineDash([10, 5])\r\n        ctx.strokeStyle = `rgba(0,0,0,${this.lineOpacity / 100})`\r\n        ctx.lineDashOffset = this.lifetime / 4\r\n        ctx.lineWidth = .3\r\n        for (let int = 0; int < 5; int++) {\r\n            ctx.beginPath()\r\n            let webMap = this.vertices.map(k => ({\r\n                x: k.x * (int / 5),\r\n                y: k.y * (int / 5)\r\n            }))\r\n            webMap.forEach(k => ctx.lineTo(k.x, k.y))\r\n            ctx.lineTo(webMap[0].x, webMap[0].y)\r\n            ctx.stroke()\r\n        }\r\n\r\n        this.vertices.forEach(k => {\r\n            ctx.beginPath()\r\n            ctx.moveTo(0, 0)\r\n            ctx.lineTo(k.x, k.y)\r\n            ctx.stroke()\r\n        })\r\n    }\r\n    words(ctx) {\r\n        let names = ['UI/UX','Javascript', 'ReactJS', 'Express', 'PostgreSQL', \"NextJS\" ]\r\n        ctx.font = '18px Josefin Sans'\r\n        names.forEach((k, i) => {\r\n            let show = this.lifetime > 10 * i + this.totalTime\r\n            let cycle = Math.min((this.lifetime - 10 * i - this.totalTime) / 100, 1)\r\n            let opacity = show ? ease(cycle) : 0\r\n            let index = (i + 2) % 6\r\n            let { x, y } = this.vertices[index]\r\n            if (y > 0) y += 40\r\n            if (y < 0) y += -25\r\n            ctx.textAlign = 'center'\r\n            \r\n            ctx.fillStyle = `rgba(0,0,0,${opacity})`\r\n            \r\n            ctx.fillText(k, x, y)\r\n        })\r\n    }\r\n    render(ctx) {\r\n        let angle = this.lifetime / this.totalTime\r\n        let unit = Math.PI / 2\r\n        let a = angle + unit\r\n        let b = angle + unit * 2\r\n        let c = angle + unit * 3\r\n\r\n        let getX = (a) => Math.cos(a) * 100\r\n        let getY = (a) => Math.sin(a) * 100\r\n\r\n        this.color(getX(b), getY(b), \"rgba(255,0,0,.15)\", ctx)\r\n        this.color(getX(angle), getY(angle), \"rgba(0,255,255,.15)\", ctx)\r\n        this.color(getX(a), getY(a), \"rgba(0,0,255,.15)\", ctx)\r\n        this.color(getX(c), getY(c), \"rgba(0,255,0,.15)\", ctx)\r\n        this.web(ctx)\r\n        this.lines(ctx)\r\n        this.words(ctx)\r\n\r\n    }\r\n    update() {\r\n        if (this.time < this.totalTime) {\r\n            this.vertices = this.setVertices()\r\n            this.time++\r\n        } else if (this.lineOpacity < 20) this.lineOpacity++\r\n\r\n\r\n        this.lifetime++\r\n    }\r\n}\r\n\r\n","export class Title {\r\n    constructor(x, y, text, align = 'center') {\r\n        this.text = text\r\n        this.pos = { x, y }\r\n        this.align = align\r\n    }\r\n    update() {\r\n        return\r\n    }\r\n    render(ctx) {\r\n        ctx.fillStyle = \"rgba(0,0,0,1)\"\r\n        ctx.font = '24px Josefin Sans'\r\n        ctx.textAlign = this.align\r\n        ctx.fillText(this.text, this.pos.x, this.pos.y)\r\n    }\r\n}\r\n","import { useLayoutEffect, useRef } from \"react\";\r\nimport { animation } from \"./animation\"\r\n\r\nexport default function Hexagon({ ready }) {\r\n    let canvasRef = useRef()\r\n    let [width, height] = [506.25, 900]\r\n\r\n    useLayoutEffect(() => {\r\n        let swirl = animation(canvasRef.current)\r\n        function animate() {\r\n            requestAnimationFrame(() => {\r\n                swirl.update()\r\n                swirl.render()\r\n                animate()\r\n            })\r\n        }\r\n\r\n        if (ready) animate()\r\n    }, [ready])\r\n\r\n    return (\r\n        <canvas\r\n            role=\"img\"\r\n            aria-label=\"Chart A: Time spent learning about... (%). 1. Javascript: 100%. 2. ReactJS: 90%. 3. Express: 70%. 4. PostgreSQL: 60%. 5. NextJS: 80%. 6. UI/UX: 60%.\"\r\n            ref={canvasRef} {...{ width, height }}\r\n        />\r\n    )\r\n}\r\n","import { Hex } from \"./hex.js\"\r\nimport { Title } from \"./title.js\"\r\n\r\nexport const animation = canvas => {\r\n    let ctx = canvas.getContext('2d')\r\n    let verticalMargin = 150\r\n    let horizontalMargin = 0\r\n    let height = canvas.height - verticalMargin * 2\r\n    let width = canvas.width - horizontalMargin * 2\r\n    ctx.setTransform(1,0,0,1,0,0)\r\n    ctx.translate(width / 2 + horizontalMargin, height / 2 + verticalMargin)\r\n\r\n    return ({\r\n        bodies: [\r\n            new Hex(width / 2, height / 2, [.6, .8, .6, 1, .9, .7]),\r\n            new Title(0, canvas.height / -2 + 48, \"Chart A: Time spent learning about... (%)\")\r\n        ],\r\n        update: function () {\r\n            this.bodies.forEach(k => k.update())\r\n        },\r\n        render: function () {\r\n            let { width, height } = canvas\r\n            let ctx = canvas.getContext('2d')\r\n            ctx.fillStyle = \"rgba(255,255,255,0.1)\"\r\n            ctx.fillRect(width / -2, height / -2, width, height)\r\n            this.bodies.forEach(k => k.render(ctx))\r\n        }\r\n    })\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Slide from \"../common/Slide\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\nimport Hexagon from \"./Hexagon\";\r\n\r\nexport default function Skills() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) setShown(true)\r\n    }, [isVisible, shown])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!shown && !isVisible ? \"transparent\" : 'skills'}>\r\n                <Hexagon ready={shown} />\r\n            </div>\r\n\r\n        </Slide>\r\n    )\r\n}\r\n","export class Title {\r\n    constructor(x, y, text, align = 'center') {\r\n        this.text = text\r\n        this.pos = { x, y }\r\n        this.align = align\r\n    }\r\n    update() {\r\n        return\r\n    }\r\n    render(ctx) {\r\n        ctx.fillStyle = \"rgba(0,0,0,1)\"\r\n        ctx.font = '24px Josefin Sans'\r\n        ctx.textAlign = this.align\r\n        ctx.fillStyle = `rgba(230,230,100, 1)`\r\n        ctx.strokeStyle = \"black\"\r\n        ctx.fillText(this.text, this.pos.x, this.pos.y)\r\n        ctx.strokeText(this.text, this.pos.x, this.pos.y)\r\n    }\r\n}\r\n","let ease = x => 1 - Math.pow(1 - x, 4);\r\nexport class Tag {\r\n    constructor(tag, height, size) {\r\n        this.tag = tag\r\n        this.size = size\r\n        this.canvasHeight = height\r\n        this.fontSize = 22 + 5 * this.size\r\n        this.pos = { x: 0, y: 0 }\r\n    }\r\n    setPosition(x, y) {\r\n        this.pos = { x, y }\r\n    }\r\n    render(ctx) {\r\n        ctx.font = this.fontSize + \"px Josefin Sans\"\r\n        let opacity = Math.min(Math.abs(this.canvasHeight + this.pos.y), Math.abs(this.canvasHeight - this.pos.y), 100) / 100\r\n        ctx.fillStyle = `rgba(230,230,100, ${ease(opacity)})`\r\n        ctx.strokeStyle = \"black\"\r\n        ctx.lineWidth=\".3\"\r\n        ctx.fillText(this.tag, this.pos.x, this.pos.y)\r\n        ctx.strokeText(this.tag, this.pos.x, this.pos.y)\r\n\r\n    }\r\n    update() {\r\n        this.pos.y++\r\n        return this.pos.y > this.canvasHeight\r\n    }\r\n}\r\n","import { Tag } from \"./tag.js\"\r\n\r\nexport class Cloud {\r\n    constructor(width, height, tags) {\r\n        this.width = width\r\n        this.height = height\r\n        this.tags = tags\r\n        this.bodies = []\r\n        this.nobodies = []\r\n        this.fontSize = 22\r\n        this.marginSize = 20\r\n        this.makeTags(this.tags)\r\n        this.setTags()\r\n    }\r\n    pushBody(k, n) {\r\n        this.bodies.push(new Tag(k, this.height, n))\r\n    }\r\n    makeTags(arr, acc = 0) {\r\n        if (arr instanceof Array) return arr.forEach(k => this.pushBody(k, 1))\r\n        Object.keys(arr).forEach(k => {\r\n            this.pushBody(k, 3 - acc)\r\n            this.makeTags(arr[k], acc + 1)\r\n        })\r\n    }\r\n    setTags() {\r\n        let total = 0\r\n        let { marginSize, fontSize } = this\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            if (total < this.height * 2) {\r\n                this.bodies[i].setPosition(0, this.height - total)\r\n                total += this.bodies[i].size * marginSize + fontSize + this.bodies[i + 1].size * marginSize\r\n            }\r\n            else return this.nobodies = this.bodies.splice(i)\r\n        }\r\n    }\r\n    render(ctx) {\r\n        this.bodies.forEach(k => k.render(ctx))\r\n    }\r\n    update() {\r\n        let uppermost = this.bodies[this.bodies.length - 1]\r\n        let lowermost = this.nobodies[0]\r\n        let { fontSize, marginSize } = this\r\n        if (this.height + uppermost.pos.y > fontSize + uppermost.size * marginSize + lowermost.size * marginSize) {\r\n            let tag = this.nobodies.shift()\r\n            tag.setPosition(0, -this.height)\r\n            this.bodies.push(tag)\r\n        }\r\n        this.bodies.forEach((k, i) => {\r\n            let hide = k.update()\r\n            if (hide) {\r\n                let body = this.bodies.splice(i, 1)\r\n                this.nobodies.push(body[0])\r\n            }\r\n        })\r\n    }\r\n}\r\n","import { useRef, useLayoutEffect } from \"react\"\r\nimport { cloud } from \"./animation\"\r\n\r\nexport default function Chart({ tags }) {\r\n    let canvasRef = useRef()\r\n    let [width, height] = [506.25, 900]\r\n    useLayoutEffect(() => {\r\n        let galaxy = cloud(canvasRef.current, tags)\r\n        function animate() {\r\n            requestAnimationFrame(() => {\r\n                galaxy.update()\r\n                galaxy.render()\r\n                animate()\r\n            })\r\n        }\r\n        animate()\r\n    }, [tags])\r\n    return (\r\n        <canvas\r\n            role='img'\r\n            aria-label={JSON.stringify(tags)}\r\n            ref={canvasRef} {...{ width, height }}\r\n        />\r\n    )\r\n}\r\n","import { Title } from \"./title\"\r\nimport { Cloud } from \"./cloud\"\r\n\r\nexport const cloud = (canvas, tags) => {\r\n    let ctx = canvas.getContext('2d')\r\n    let verticalMargin = 150\r\n    let horizontalMargin = 0\r\n    let height = canvas.height - verticalMargin * 2\r\n    let width = canvas.width - horizontalMargin * 2\r\n    ctx.translate(width / 2 + horizontalMargin, height / 2 + verticalMargin)\r\n    return ({\r\n        bodies: [\r\n            new Cloud(width/2, height/2, tags),\r\n            new Title(0, canvas.height / -2 + 72, \"Chart B: Skillstackverse \"),\r\n            \r\n        ],\r\n        update: function () {\r\n            this.bodies.forEach(k => k.update())\r\n        },\r\n        render: function () {\r\n            let ctx = canvas.getContext('2d')\r\n            ctx.font = \"22px Josefin Sans\"\r\n            ctx.fillStyle = \"rgba(30,30,30,1)\"\r\n            ctx.fillRect(canvas.width / -2, canvas.height / -2, canvas.width, canvas.height)\r\n            this.bodies.forEach(k => k.render(ctx))\r\n        }\r\n    })\r\n}\r\n","import { useRef, useState, useEffect } from 'react'\r\nimport Slide from \"../common/Slide\";\r\nimport Chart from \"./Chart\";\r\nimport useOnScreen from '../common/useOnScreen';\r\n\r\nexport default function Tags() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) setShown(true)\r\n    }, [shown, isVisible])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!isVisible && !shown ? 'galaxy transparent' : 'galaxy tags'}>\r\n                <Chart tags={tags} />\r\n            </div>\r\n        </Slide>\r\n    )\r\n}\r\n\r\nconst tags = {\r\n    \"JS\": {\r\n        \"React\": [\"Class components\", \"Functional components\", \"Hooks\", \"Component lifecycle\", \"Webpack\", \"Babel\", \"Redux\"],\r\n        \"CSS\": [\"Box model\", \"Flexbox\", \"Grid\", \"SASS\", \"Modularity\", \"Reusability\", \"Media queries\", \"Material-UI\", \"Bootstrap\", \"Styled components\"],\r\n        \"Node\": [\"Express\", \"Postman\", \"JWT\", \"WebSockets\", \"Socket.io\", \"NextJS\", \"REST\", \"PostgreSQL\", \"Authentication\"],\r\n    }\r\n}\r\n\r\n","import Slide from \"./Slide\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <Slide>\r\n            <div className=\"loading\">\r\n                <svg width='200' height='200' viewBox=\"-75 -75 150 150\">\r\n                    <Circle x={-2} y={-10} color={\"cyan\"} />\r\n                    <Circle x={2} y={-10} color={\"red\"} />\r\n                    <Circle x={0} y={-10} color={\"black\"} />\r\n                </svg>\r\n            </div>\r\n        </Slide>\r\n\r\n    )\r\n}\r\n\r\nfunction Circle({ x, y, color }) {\r\n    return (\r\n        <circle\r\n            r=\"5\"\r\n            cx={x}\r\n            cy={y}\r\n            strokeWidth=\"5\"\r\n            fill={color}\r\n        >\r\n            <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                from=\"0 0 0\"\r\n                to=\"360 0 0\"\r\n                repeatCount='indefinite'\r\n                dur='2s'\r\n                calcMode='linear'\r\n            />\r\n        </circle>)\r\n}\r\n","import { Context } from \"../common/Context\"\r\nimport { useContext } from \"react\"\r\n\r\nexport default function Header() {\r\n    let { scroll } = useContext(Context)\r\n    return (\r\n        <div className='header' onClick={() => scroll(1)}>\r\n            <p>cv</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Contact from \"../contact/Contact\";\r\nimport Home from \"../home/Home\";\r\nimport Skills from \"../skills/Skills\";\r\nimport Tags from \"../tags/Tags\";\r\nimport Loading from \"./Loading\";\r\nimport WebFont from \"webfontloader\";\r\nimport Header from '../header/Header'\r\n\r\nexport default function Loader({ element }) {\r\n    let [ready, setReady] = useState(false)\r\n    let [done, setDone] = useState(false)\r\n    useEffect(() => {\r\n        WebFont.load({\r\n            google: {\r\n                families: ['Josefin Sans'],\r\n            },\r\n            active: () => setReady(true)\r\n        })\r\n        let timeout = setTimeout(() => setDone(true), 500)\r\n        return () => clearTimeout(timeout)\r\n    }, [])\r\n    switch (ready && done) {\r\n        case true: return (\r\n            <>\r\n                <Home />\r\n                <Skills />\r\n                <Tags />\r\n                <Contact />\r\n                <Header element={element} />\r\n            </>\r\n        );\r\n        default: return <Loading />\r\n    }\r\n}\r\n","import { useEffect, useRef } from 'react'\r\nimport { Context } from './Context'\r\nimport animateScroll from './scrollTo'\r\nimport Loader from './Loader'\r\n\r\nexport default function Container() {\r\n    let ref = useRef()\r\n    let scroll = target => animateScroll(ref.current, target)\r\n    useEffect(() => {\r\n        ref.current.click()\r\n    }, [])\r\n    return (\r\n        <Context.Provider value={{ scroll }}>\r\n            <div ref={ref} className=\"container\">\r\n                <Loader element={ref} />\r\n            </div>\r\n        </Context.Provider>\r\n    )\r\n}\r\n","import Container from \"./common/Container\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './assets/css/_app.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}