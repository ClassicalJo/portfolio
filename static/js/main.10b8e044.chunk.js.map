{"version":3,"sources":["components/common/Context.jsx","components/common/scrollTo.js","components/common/Slide.jsx","components/contact/Button.jsx","components/contact/SmolButton.jsx","components/common/Wrapper.jsx","components/contact/Card.jsx","components/common/useOnScreen.jsx","components/contact/Contact.jsx","components/home/Home.jsx","components/skills/swirl.js","components/skills/hex.js","components/skills/title.js","components/skills/Hexagon.jsx","components/skills/animation.js","components/skills/Skills.jsx","components/tags/title.js","components/tags/tag.js","components/tags/cloud.js","components/tags/Chart.jsx","components/tags/animation.js","components/tags/Tags.jsx","components/common/Loading.jsx","components/header/Header.jsx","components/common/Loader.jsx","components/common/Container.jsx","components/App.js","index.js"],"names":["Context","createContext","animateScroll","element","target","distance","scrollHeight","scrollTop","origin","p","animate","requestAnimationFrame","x","point","scrollTo","scroll","Math","cos","PI","Slide","children","className","Button","onClick","SmolButton","onCopy","Wrapper","Card","toggle","mailRef","useRef","href","type","defaultValue","ref","current","select","document","execCommand","blur","useOnScreen","useState","isIntersecting","setIntersecting","observer","useMemo","IntersectionObserver","entry","threshold","useEffect","observe","disconnect","Contact","show","setShow","isVisible","shown","setShown","toggleCard","rel","Home","Swirl","rx","ry","originCanvas","this","canvas","createCanvas","translateCenter","draw","y","col","ctx","getContext","maxR","max","grad","createRadialGradient","addColorStop","fillStyle","width","height","fillRect","colors","i","unit","r","color","sin","createElement","translate","ease","Hex","values","time","lifetime","totalTime","vertices","setVertices","lineOpacity","background","Array","fill","map","k","vertex","getPosition","animatedRadius","angle","beginPath","forEach","lineTo","setLineDash","strokeStyle","lineDashOffset","lineWidth","stroke","int","webMap","moveTo","font","cycle","min","opacity","index","textAlign","fillText","memCanvas","memCtx","WIDTH","HEIGHT","W2","H2","save","rotate","drawImage","restore","globalCompositeOperation","swirl","web","lines","words","Title","text","align","pos","Hexagon","ready","canvasRef","useLayoutEffect","verticalMargin","horizontalMargin","setTransform","bodies","update","render","animation","role","Skills","strokeText","Tag","tag","size","canvasHeight","fontSize","abs","pow","Cloud","tags","nobodies","marginSize","makeTags","setTags","n","push","arr","acc","pushBody","Object","keys","total","length","splice","setPosition","uppermost","lowermost","shift","body","Chart","galaxy","cloud","JSON","stringify","Tags","Loading","viewBox","Circle","cx","cy","strokeWidth","attributeName","from","to","repeatCount","dur","calcMode","Header","useContext","Loader","setReady","done","setDone","WebFont","load","google","families","active","timeout","setTimeout","clearTimeout","Container","click","Provider","value","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.10b8e044.chunk.js","sourcesContent":["import { createContext } from 'react'\r\nexport let Context = createContext()\r\n","let ease = x => 1 - Math.cos(x * Math.PI / 2)\r\nlet scroll = (element, point) => element.scrollTo(0, point)\r\n\r\nconst animateScroll = (element, target) => {\r\n    let distance = target * element.scrollHeight - element.scrollTop\r\n    let origin = element.scrollTop\r\n    let p = 0\r\n    function animate() {\r\n        requestAnimationFrame(() => {\r\n            p += .05\r\n            scroll(element, origin + ease(p) * distance)\r\n            if (p < 1) animate()\r\n        })\r\n    }\r\n    animate()\r\n}\r\nexport default animateScroll\r\n","export default function Slide({ children }) {\r\n    return (\r\n        <div className=\"slide\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function Button({ children, onClick }) {\r\n    return (\r\n        <div className='button' onClick={onClick}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function SmolButton({ onClick, children, onCopy }) {\r\n    return (\r\n        <div className='smol-button' onClick={onClick} onCopy={onCopy}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function Wrapper({ children }) {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {children}\r\n        </div>)\r\n}\r\n","import { useRef} from \"react\"\r\nimport SmolButton from \"./SmolButton\"\r\nimport Wrapper from \"../common/Wrapper\"\r\n\r\nexport default function Card({ toggle }) {\r\n    let mailRef = useRef()\r\n\r\n    function copy() {\r\n        mailRef.current.select()\r\n        document.execCommand('copy')\r\n        mailRef.current.blur()\r\n    }\r\n    return (\r\n        <div className='card'>\r\n            <Wrapper>\r\n                <Wrapper>\r\n                    <div className=\"close\" onClick={toggle} ><p>✖</p></div>\r\n                    <div className=\"line\">\r\n                        <p><span>👨‍🦱</span>Jose Barrientos</p>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                        <p><span>🏡</span>Ciudad Autónoma de Buenos Aires, Argentina</p>                    </div>\r\n                    <div className=\"line\">\r\n                        <p>\r\n                            <span>📧</span>\r\n                            <a href=\"mailto:jb.barrientos@yahoo.com\">\r\n                                <input type=\"text\" defaultValue=\"jb.barrientos@yahoo.com\" ref={mailRef} />\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                    <SmolButton\r\n                        onClick={copy} ><p>Copy mail</p></SmolButton>\r\n                </Wrapper>\r\n            </Wrapper>\r\n        </div >\r\n    )\r\n}\r\n\r\n","//https://stackoverflow.com/questions/45514676/react-check-if-element-is-visible-in-dom\r\nimport { useEffect, useMemo, useState } from 'react'\r\n\r\nexport default function useOnScreen(ref) {\r\n    const [isIntersecting, setIntersecting] = useState(false)\r\n    const observer = useMemo(() => new IntersectionObserver(\r\n        ([entry]) => setIntersecting(entry.isIntersecting),\r\n        { threshold: .75 }\r\n    ), [])\r\n    useEffect(() => {\r\n        observer.observe(ref.current)\r\n        return () => { observer.disconnect() }\r\n    }, [observer, ref])\r\n    return isIntersecting\r\n}\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport Slide from \"../common/Slide\";\r\nimport Button from \"./Button\";\r\nimport Card from \"./Card\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\n\r\nexport default function Contact() {\r\n    let [show, setShow] = useState(false)\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) {\r\n            setShown(true)\r\n        }\r\n    }, [shown, isVisible])\r\n    let toggleCard = () => setShow(!show)\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!isVisible && !shown ? \"transparent\" : 'contact'}>\r\n                <Button><a href=\"cv.pdf\"><p>Resume</p></a></Button>\r\n                <Button >\r\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://classicaljo.github.io/projects\">\r\n                        <p>Projects</p>\r\n                    </a>\r\n                </Button>\r\n                <Button onClick={toggleCard}><p>Contact details</p></Button>\r\n                {show && <Card toggle={toggleCard} />}\r\n            </div>\r\n        </Slide>\r\n    )\r\n}\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport Slide from \"../common/Slide\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\nimport Wrapper from \"../common/Wrapper\";\r\n\r\nexport default function Home() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) {\r\n            setShown(true)\r\n        }\r\n    }, [shown, isVisible])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!shown && !isVisible ? \"transparent\" : 'home'}>\r\n                <Wrapper>\r\n                    <p className='title'>\r\n                        hi\r\n                    </p>\r\n                    <p className='subtitle'>\r\n                        i'm Joe.\r\n                    </p>\r\n                </Wrapper>\r\n            </div>\r\n        </Slide >\r\n    )\r\n}\r\n","export class Swirl {\r\n    constructor(rx, ry, originCanvas) {\r\n        this.canvas = this.createCanvas(originCanvas)\r\n        this.rx = rx\r\n        this.ry = ry\r\n        this.translateCenter()\r\n        this.draw(this.canvas)\r\n    }\r\n    color(x, y, col) {\r\n        let ctx = this.canvas.getContext('2d')\r\n        let maxR = Math.max(this.rx, this.ry)\r\n        let grad = ctx.createRadialGradient(x, y, 1e-1, x, y, maxR * 4)\r\n        grad.addColorStop(0, col)\r\n        grad.addColorStop(1, \"rgba(255,255,255,0)\")\r\n        ctx.fillStyle = grad\r\n        let max = Math.max(this.canvas.width, this.canvas.height)\r\n        ctx.fillRect(this.canvas.width / -2, this.canvas.height / -2, max, max)\r\n    }\r\n    draw() {\r\n        let colors = [\r\n            \"hsla(0,100%,65%,.15)\",\r\n            \"hsla(120,100%,65%,.15)\",\r\n            \"hsla(240,100%,65%,.15)\"\r\n        ]\r\n        for (let i = 0; i < 3; i++) {\r\n            let unit = i * Math.PI * 2 / 3\r\n            let r = Math.max(this.rx, this.ry)\r\n            this.color(Math.cos(unit) * r, Math.sin(unit) * r, colors[i])\r\n        }\r\n    }\r\n    createCanvas(origin) {\r\n        let canvas = document.createElement(\"canvas\")\r\n        let max = Math.max(origin.width, origin.height)\r\n        canvas.width = max\r\n        canvas.height = max\r\n        return canvas\r\n    }\r\n    translateCenter(){\r\n        let ctx = this.canvas.getContext('2d')\r\n        ctx.translate(this.canvas.width / 2, this.canvas.height / 2)\r\n    }\r\n}\r\n","import { Swirl } from './swirl'\r\nlet ease = x => Math.sin((x * Math.PI) / 2)\r\n\r\nexport class Hex {\r\n    constructor(rx, ry, values = [1, 1, 1, 1, 1, 1], originCanvas) {\r\n        this.values = values\r\n        this.origin = originCanvas\r\n        this.rx = rx\r\n        this.ry = ry\r\n        this.time = 0\r\n        this.lifetime = 0\r\n        this.totalTime = 48\r\n        this.vertices = this.setVertices()\r\n        this.lineOpacity = 0\r\n        this.background = new Swirl(this.rx, this.ry, originCanvas).canvas\r\n    }\r\n    setVertices() {\r\n        return new Array(6)\r\n            .fill(\"\")\r\n            .map((k, i) => Math.PI * 2 / 6 * i + Math.PI / 2)\r\n            .map((vertex, i) => this.getPosition(\r\n                vertex,\r\n                this.animatedRadius(this.rx),\r\n                this.ry\r\n            ))\r\n    }\r\n    animatedRadius(r) {\r\n        return ease(this.time / this.totalTime) * r\r\n    }\r\n    getPosition(angle, rx, ry) {\r\n        return { x: rx * Math.cos(angle), y: ry * Math.sin(angle) }\r\n    }\r\n    color(x, y, col, ctx) {\r\n        ctx.beginPath()\r\n        this.vertices.forEach((k, i) => ctx.lineTo(k.x * this.values[i], k.y * this.values[i]))\r\n        ctx.lineTo(this.vertices[0].x * this.values[0], this.vertices[0].y * this.values[0])\r\n        let grad = ctx.createRadialGradient(x, y, 2 * Math.max(this.rx, this.ry), x, y, 2 * Math.max(this.rx, this.ry) / 10)\r\n        grad.addColorStop(.2, \"rgba(255,255,255,0)\")\r\n        grad.addColorStop(1, col)\r\n        ctx.fillStyle = grad\r\n        ctx.fill()\r\n    }\r\n    lines(ctx) {\r\n        ctx.beginPath()\r\n        this.vertices.forEach(k => ctx.lineTo(k.x, k.y))\r\n        ctx.lineTo(this.vertices[0].x, this.vertices[0].y)\r\n        ctx.setLineDash([350, 200])\r\n        ctx.strokeStyle = `rgba(0,0,0,${this.lineOpacity / 100})`\r\n        ctx.lineDashOffset = -this.lifetime * 2.5\r\n        ctx.lineWidth = 3\r\n        ctx.stroke()\r\n    }\r\n    web(ctx) {\r\n        ctx.setLineDash([10, 5])\r\n        ctx.strokeStyle = `rgba(0,0,0,${this.lineOpacity / 100})`\r\n        ctx.lineDashOffset = this.lifetime / 4\r\n        ctx.lineWidth = .3\r\n        for (let int = 0; int < 5; int++) {\r\n            ctx.beginPath()\r\n            let webMap = this.vertices.map(k => ({\r\n                x: k.x * (int / 5),\r\n                y: k.y * (int / 5)\r\n            }))\r\n            webMap.forEach(k => ctx.lineTo(k.x, k.y))\r\n            ctx.lineTo(webMap[0].x, webMap[0].y)\r\n            ctx.stroke()\r\n        }\r\n\r\n        this.vertices.forEach(k => {\r\n            ctx.beginPath()\r\n            ctx.moveTo(0, 0)\r\n            ctx.lineTo(k.x, k.y)\r\n            ctx.stroke()\r\n        })\r\n    }\r\n    words(ctx) {\r\n        let names = ['UI/UX', 'Javascript', 'ReactJS', 'Express', 'PostgreSQL', \"NextJS\"]\r\n        ctx.font = '18px Josefin Sans'\r\n        names.forEach((k, i) => {\r\n            let show = this.lifetime > 10 * i + this.totalTime\r\n            let cycle = Math.min((this.lifetime - 10 * i - this.totalTime) / 100, 1)\r\n            let opacity = show ? ease(cycle) : 0\r\n            let index = (i + 2) % 6\r\n            let { x, y } = this.vertices[index]\r\n            if (y > 0) y += 40\r\n            if (y < 0) y += -25\r\n            ctx.textAlign = 'center'\r\n\r\n            ctx.fillStyle = `rgba(0,0,0,${opacity})`\r\n\r\n            ctx.fillText(k, x, y)\r\n        })\r\n    }\r\n    swirl(ctx){\r\n        let memCanvas = document.createElement('canvas')\r\n        let memCtx = memCanvas.getContext('2d')\r\n        let [WIDTH, HEIGHT] = [this.origin.width, this.origin.height]\r\n        let [W2, H2] = [WIDTH / 2, HEIGHT / 2]\r\n        memCanvas.width = WIDTH\r\n        memCanvas.height = HEIGHT\r\n        memCtx.translate(W2, H2)\r\n        memCtx.save()\r\n        memCtx.rotate(this.lifetime * Math.PI / 180)\r\n        memCtx.drawImage(this.background, this.background.width / -2, this.background.height / -2, this.background.width, this.background.height)\r\n        memCtx.restore()\r\n        memCtx.globalCompositeOperation = 'destination-in'\r\n        this.vertices.forEach((k, i) => memCtx.lineTo(k.x * this.values[i], k.y * this.values[i]))\r\n        memCtx.fillStyle = \"rgba(0,0,0,1)\"\r\n        memCtx.fill()\r\n\r\n        ctx.drawImage(memCanvas, -W2, -H2)\r\n    }\r\n    render(ctx) {\r\n        this.swirl(ctx)\r\n        this.web(ctx)\r\n        this.lines(ctx)\r\n        this.words(ctx)\r\n\r\n    }\r\n    update() {\r\n        if (this.time < this.totalTime) {\r\n            this.vertices = this.setVertices()\r\n            this.time++\r\n        } else if (this.lineOpacity < 20) this.lineOpacity++\r\n\r\n\r\n        this.lifetime++\r\n    }\r\n}\r\n\r\n","export class Title {\r\n    constructor(x, y, text, align = 'center') {\r\n        this.text = text\r\n        this.pos = { x, y }\r\n        this.align = align\r\n    }\r\n    update() {\r\n        return\r\n    }\r\n    render(ctx) {\r\n        ctx.fillStyle = \"rgba(0,0,0,1)\"\r\n        ctx.font = '24px Josefin Sans'\r\n        ctx.textAlign = this.align\r\n        ctx.fillText(this.text, this.pos.x, this.pos.y)\r\n    }\r\n}\r\n","import { useLayoutEffect, useRef } from \"react\";\r\nimport { animation } from \"./animation\"\r\n\r\nexport default function Hexagon({ ready }) {\r\n    let canvasRef = useRef()\r\n    let [width, height] = [506.25, 900]\r\n\r\n    useLayoutEffect(() => {\r\n        let swirl = animation(canvasRef.current)\r\n        function animate() {\r\n            requestAnimationFrame(() => {\r\n                swirl.update()\r\n                swirl.render()\r\n                animate()\r\n            })\r\n        }\r\n\r\n        if (ready) animate()\r\n    }, [ready])\r\n\r\n    return (\r\n        <canvas\r\n            role=\"img\"\r\n            aria-label=\"Chart A: Time spent learning about... (%). 1. Javascript: 100%. 2. ReactJS: 90%. 3. Express: 70%. 4. PostgreSQL: 60%. 5. NextJS: 80%. 6. UI/UX: 60%.\"\r\n            ref={canvasRef} {...{ width, height }}\r\n        />\r\n    )\r\n}\r\n","import { Hex } from \"./hex.js\"\r\nimport { Title } from \"./title.js\"\r\n\r\nexport const animation = canvas => {\r\n    let ctx = canvas.getContext('2d')\r\n    let verticalMargin = 150\r\n    let horizontalMargin = 0\r\n    let height = canvas.height - verticalMargin * 2\r\n    let width = canvas.width - horizontalMargin * 2\r\n    ctx.setTransform(1,0,0,1,0,0)\r\n    ctx.translate(width / 2 + horizontalMargin, height / 2 + verticalMargin)\r\n\r\n    return ({\r\n        bodies: [\r\n            new Hex(width / 2, height / 2, [.6, .8, .6, 1, .9, .7], canvas),\r\n            new Title(0, canvas.height / -2 + 48, \"Chart A: Focused learning about... (%)\")\r\n        ],\r\n        update: function () {\r\n            this.bodies.forEach(k => k.update())\r\n        },\r\n        render: function () {\r\n            let { width, height } = canvas\r\n            let ctx = canvas.getContext('2d')\r\n            ctx.fillStyle = \"rgba(255,255,255,0.1)\"\r\n            ctx.fillRect(width / -2, height / -2, width, height)\r\n            this.bodies.forEach(k => k.render(ctx))\r\n        }\r\n    })\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Slide from \"../common/Slide\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\nimport Hexagon from \"./Hexagon\";\r\n\r\nexport default function Skills() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) setShown(true)\r\n    }, [isVisible, shown])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!shown && !isVisible ? \"transparent\" : 'skills'}>\r\n                <Hexagon ready={shown} />\r\n            </div>\r\n\r\n        </Slide>\r\n    )\r\n}\r\n","export class Title {\r\n    constructor(x, y, text, align = 'center') {\r\n        this.text = text\r\n        this.pos = { x, y }\r\n        this.align = align\r\n    }\r\n    update() {\r\n        return\r\n    }\r\n    render(ctx) {\r\n        ctx.fillStyle = \"rgba(0,0,0,1)\"\r\n        ctx.font = '24px Josefin Sans'\r\n        ctx.textAlign = this.align\r\n        ctx.fillStyle = `rgba(230,230,100, 1)`\r\n        ctx.strokeStyle = \"black\"\r\n        ctx.fillText(this.text, this.pos.x, this.pos.y)\r\n        ctx.strokeText(this.text, this.pos.x, this.pos.y)\r\n    }\r\n}\r\n","let ease = x => 1 - Math.pow(1 - x, 4);\r\nexport class Tag {\r\n    constructor(tag, height, size) {\r\n        this.tag = tag\r\n        this.size = size\r\n        this.canvasHeight = height\r\n        this.fontSize = 22 + 5 * this.size\r\n        this.pos = { x: 0, y: 0 }\r\n    }\r\n    setPosition(x, y) {\r\n        this.pos = { x, y }\r\n    }\r\n    render(ctx) {\r\n        ctx.font = this.fontSize + \"px Josefin Sans\"\r\n        let opacity = Math.min(Math.abs(this.canvasHeight + this.pos.y), Math.abs(this.canvasHeight - this.pos.y), 100) / 100\r\n        ctx.fillStyle = `rgba(230,230,100, ${ease(opacity)})`\r\n        ctx.strokeStyle = \"black\"\r\n        ctx.lineWidth=\".3\"\r\n        ctx.fillText(this.tag, this.pos.x, this.pos.y)\r\n        ctx.strokeText(this.tag, this.pos.x, this.pos.y)\r\n\r\n    }\r\n    update() {\r\n        this.pos.y++\r\n        return this.pos.y > this.canvasHeight\r\n    }\r\n}\r\n","import { Tag } from \"./tag.js\"\r\n\r\nexport class Cloud {\r\n    constructor(width, height, tags) {\r\n        this.width = width\r\n        this.height = height\r\n        this.tags = tags\r\n        this.bodies = []\r\n        this.nobodies = []\r\n        this.fontSize = 22\r\n        this.marginSize = 20\r\n        this.makeTags(this.tags)\r\n        this.setTags()\r\n    }\r\n    pushBody(k, n) {\r\n        this.bodies.push(new Tag(k, this.height, n))\r\n    }\r\n    makeTags(arr, acc = 0) {\r\n        if (arr instanceof Array) return arr.forEach(k => this.pushBody(k, 1))\r\n        Object.keys(arr).forEach(k => {\r\n            this.pushBody(k, 3 - acc)\r\n            this.makeTags(arr[k], acc + 1)\r\n        })\r\n    }\r\n    setTags() {\r\n        let total = 0\r\n        let { marginSize, fontSize } = this\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            if (total < this.height * 2) {\r\n                this.bodies[i].setPosition(0, this.height - total)\r\n                total += this.bodies[i].size * marginSize + fontSize + this.bodies[i + 1].size * marginSize\r\n            }\r\n            else return this.nobodies = this.bodies.splice(i)\r\n        }\r\n    }\r\n    render(ctx) {\r\n        this.bodies.forEach(k => k.render(ctx))\r\n    }\r\n    update() {\r\n        let uppermost = this.bodies[this.bodies.length - 1]\r\n        let lowermost = this.nobodies[0]\r\n        let { fontSize, marginSize } = this\r\n        if (this.height + uppermost.pos.y > fontSize + uppermost.size * marginSize + lowermost.size * marginSize) {\r\n            let tag = this.nobodies.shift()\r\n            tag.setPosition(0, -this.height)\r\n            this.bodies.push(tag)\r\n        }\r\n        this.bodies.forEach((k, i) => {\r\n            let hide = k.update()\r\n            if (hide) {\r\n                let body = this.bodies.splice(i, 1)\r\n                this.nobodies.push(body[0])\r\n            }\r\n        })\r\n    }\r\n}\r\n","import { useRef, useLayoutEffect } from \"react\"\r\nimport { cloud } from \"./animation\"\r\n\r\nexport default function Chart({ tags }) {\r\n    let canvasRef = useRef()\r\n    let [width, height] = [506.25, 900]\r\n    useLayoutEffect(() => {\r\n        let galaxy = cloud(canvasRef.current, tags)\r\n        function animate() {\r\n            requestAnimationFrame(() => {\r\n                galaxy.update()\r\n                galaxy.render()\r\n                animate()\r\n            })\r\n        }\r\n        animate()\r\n    }, [tags])\r\n    return (\r\n        <canvas\r\n            role='img'\r\n            aria-label={JSON.stringify(tags)}\r\n            ref={canvasRef} {...{ width, height }}\r\n        />\r\n    )\r\n}\r\n","import { Title } from \"./title\"\r\nimport { Cloud } from \"./cloud\"\r\n\r\nexport const cloud = (canvas, tags) => {\r\n    let ctx = canvas.getContext('2d')\r\n    let verticalMargin = 150\r\n    let horizontalMargin = 0\r\n    let height = canvas.height - verticalMargin * 2\r\n    let width = canvas.width - horizontalMargin * 2\r\n    ctx.translate(width / 2 + horizontalMargin, height / 2 + verticalMargin)\r\n    return ({\r\n        bodies: [\r\n            new Cloud(width/2, height/2, tags),\r\n            new Title(0, canvas.height / -2 + 72, \"Chart B: Skillstackverse \"),\r\n            \r\n        ],\r\n        update: function () {\r\n            this.bodies.forEach(k => k.update())\r\n        },\r\n        render: function () {\r\n            let ctx = canvas.getContext('2d')\r\n            ctx.font = \"22px Josefin Sans\"\r\n            ctx.fillStyle = \"rgba(30,30,30,1)\"\r\n            ctx.fillRect(canvas.width / -2, canvas.height / -2, canvas.width, canvas.height)\r\n            this.bodies.forEach(k => k.render(ctx))\r\n        }\r\n    })\r\n}\r\n","import { useRef, useState, useEffect } from 'react'\r\nimport Slide from \"../common/Slide\";\r\nimport Chart from \"./Chart\";\r\nimport useOnScreen from '../common/useOnScreen';\r\n\r\nexport default function Tags() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) setShown(true)\r\n    }, [shown, isVisible])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!isVisible && !shown ? 'galaxy transparent' : 'galaxy tags'}>\r\n                <Chart tags={tags} />\r\n            </div>\r\n        </Slide>\r\n    )\r\n}\r\n\r\nconst tags = {\r\n    \"JS\": {\r\n        \"React\": [\"Class components\", \"Functional components\", \"Hooks\", \"Component lifecycle\", \"Webpack\", \"Babel\", \"Redux\"],\r\n        \"CSS\": [\"Box model\", \"Flexbox\", \"Grid\", \"SASS\", \"Modularity\", \"Reusability\", \"Media queries\", \"Material-UI\", \"Bootstrap\", \"Styled components\"],\r\n        \"Node\": [\"Express\", \"Postman\", \"JWT\", \"WebSockets\", \"Socket.io\", \"NextJS\", \"REST\", \"PostgreSQL\", \"Authentication\"],\r\n    }\r\n}\r\n\r\n","import Slide from \"./Slide\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <Slide>\r\n            <div className=\"loading\">\r\n                <svg width='200' height='200' viewBox=\"-75 -75 150 150\">\r\n                    <Circle x={-2} y={-10} color={\"cyan\"} />\r\n                    <Circle x={2} y={-10} color={\"red\"} />\r\n                    <Circle x={0} y={-10} color={\"black\"} />\r\n                </svg>\r\n            </div>\r\n        </Slide>\r\n\r\n    )\r\n}\r\n\r\nfunction Circle({ x, y, color }) {\r\n    return (\r\n        <circle\r\n            r=\"5\"\r\n            cx={x}\r\n            cy={y}\r\n            strokeWidth=\"5\"\r\n            fill={color}\r\n        >\r\n            <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                from=\"0 0 0\"\r\n                to=\"360 0 0\"\r\n                repeatCount='indefinite'\r\n                dur='2s'\r\n                calcMode='linear'\r\n            />\r\n        </circle>)\r\n}\r\n","import { Context } from \"../common/Context\"\r\nimport { useContext } from \"react\"\r\n\r\nexport default function Header() {\r\n    let { scroll } = useContext(Context)\r\n    return (\r\n        <div className='header' onClick={() => scroll(1)}>\r\n            <p>cv</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Contact from \"../contact/Contact\";\r\nimport Home from \"../home/Home\";\r\nimport Skills from \"../skills/Skills\";\r\nimport Tags from \"../tags/Tags\";\r\nimport Loading from \"./Loading\";\r\nimport WebFont from \"webfontloader\";\r\nimport Header from '../header/Header'\r\n\r\nexport default function Loader({ element }) {\r\n    let [ready, setReady] = useState(false)\r\n    let [done, setDone] = useState(false)\r\n    useEffect(() => {\r\n        WebFont.load({\r\n            google: {\r\n                families: ['Josefin Sans'],\r\n            },\r\n            active: () => setReady(true)\r\n        })\r\n        let timeout = setTimeout(() => setDone(true), 500)\r\n        return () => clearTimeout(timeout)\r\n    }, [])\r\n    switch (ready && done) {\r\n        case true: return (\r\n            <>\r\n                <Home />\r\n                <Skills />\r\n                <Tags />\r\n                <Contact />\r\n                <Header element={element} />\r\n            </>\r\n        );\r\n        default: return <Loading />\r\n    }\r\n}\r\n","import { useEffect, useRef } from 'react'\r\nimport { Context } from './Context'\r\nimport animateScroll from './scrollTo'\r\nimport Loader from './Loader'\r\n\r\nexport default function Container() {\r\n    let ref = useRef()\r\n    let scroll = target => animateScroll(ref.current, target)\r\n    useEffect(() => {\r\n        ref.current.click()\r\n    }, [])\r\n    return (\r\n        <Context.Provider value={{ scroll }}>\r\n            <div ref={ref} className=\"container\">\r\n                <Loader element={ref} />\r\n            </div>\r\n        </Context.Provider>\r\n    )\r\n}\r\n","import Container from \"./common/Container\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './assets/css/_app.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}