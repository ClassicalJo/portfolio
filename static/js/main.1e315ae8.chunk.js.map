{"version":3,"sources":["components/common/Context.jsx","components/common/Slide.jsx","components/contact/Button.jsx","components/contact/Copy.jsx","components/common/Wrapper.jsx","components/contact/Card.jsx","components/common/useOnScreen.jsx","components/contact/Contact.jsx","components/home/Home.jsx","components/skills/swirl.js","components/skills/hex.js","components/skills/title.js","components/skills/Hexagon.jsx","components/skills/animation.js","components/skills/Skills.jsx","components/tags/title.js","components/tags/tag.js","components/tags/cloud.js","components/tags/Chart.jsx","components/tags/animation.js","components/tags/Tags.jsx","components/common/Loading.jsx","components/header/switch/index.js","components/header/Switch.jsx","components/header/CV.jsx","components/header/Header.jsx","components/common/Loader.jsx","components/common/Container.jsx","components/common/useLanguage.jsx","components/App.js","index.js"],"names":["Context","createContext","Slide","children","className","Button","onClick","Copy","tabIndex","onKeyDown","e","key","Wrapper","Card","copyLang","toggle","mailRef","useRef","focusRef","useEffect","current","focus","ref","href","type","defaultValue","select","document","execCommand","useOnScreen","useState","isIntersecting","setIntersecting","observer","useMemo","IntersectionObserver","entry","threshold","observe","disconnect","Contact","show","setShow","isVisible","shown","setShown","useContext","language","toggleCard","text","cv","rel","target","projects","contact","copy","Home","title","subtitle","Swirl","rx","ry","originCanvas","this","canvas","createCanvas","translateCenter","draw","x","y","col","ctx","getContext","maxR","Math","max","grad","createRadialGradient","addColorStop","fillStyle","width","height","fillRect","colors","i","unit","PI","r","color","cos","sin","origin","createElement","translate","ease","Hex","values","time","lifetime","totalTime","vertices","setVertices","lineOpacity","background","Array","fill","map","k","vertex","getPosition","animatedRadius","angle","beginPath","forEach","lineTo","setLineDash","strokeStyle","lineDashOffset","lineWidth","stroke","int","webMap","moveTo","font","cycle","min","opacity","index","textAlign","fillText","memCanvas","memCtx","WIDTH","HEIGHT","W2","H2","save","rotate","drawImage","restore","globalCompositeOperation","swirl","web","lines","words","Title","align","pos","Hexagon","ready","canvasRef","useLayoutEffect","frame","verticalMargin","horizontalMargin","setTransform","bodies","update","render","animation","animate","requestAnimationFrame","cancelAnimationFrame","role","description","Skills","strokeText","Tag","tag","size","canvasHeight","fontSize","abs","pow","Cloud","tags","nobodies","marginSize","makeTags","setTags","n","push","arr","acc","pushBody","Object","keys","total","length","splice","setPosition","uppermost","lowermost","shift","body","Chart","galaxy","cloud","JSON","stringify","Tags","Loading","viewBox","Circle","cx","cy","strokeWidth","attributeName","from","to","repeatCount","dur","calcMode","switcher","options","config","totalFrames","buttonSize","positions","animating","onStart","onEnd","W","H","indexOf","direction","progress","clearRect","strokeRect","frames","sx","textBaseline","isAnimating","Switch","toggler","changeLanguage","keyDown","addEventListener","removeEventListener","style","CV","scroll","border","alignItems","justifyContent","display","boxSizing","Header","Loader","element","setReady","done","setDone","WebFont","load","google","families","active","timeout","setTimeout","clearTimeout","Container","preferred","navigator","slice","includes","setCurrent","useLanguage","Provider","value","window","top","scrollHeight","behavior","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e315ae8.chunk.js","sourcesContent":["import { createContext } from 'react'\r\nexport let Context = createContext()\r\n","export default function Slide({ children }) {\r\n    return (\r\n        <div className=\"slide\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function Button({ children, onClick }) {\r\n    return (\r\n        <div className='button' onClick={onClick}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function Copy({ onClick, children }) {\r\n    return (\r\n        <div  className='copy' onClick={onClick} tabIndex={0} onKeyDown={e=> e.key === 'Enter' && onClick()}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","export default function Wrapper({ children }) {\r\n    return (\r\n        <div className=\"wrapper\">\r\n            {children}\r\n        </div>)\r\n}\r\n","import { useRef, useEffect } from \"react\"\r\nimport Copy from \"./Copy\"\r\nimport Wrapper from \"../common/Wrapper\"\r\nexport default function Card({ copyLang, toggle, onKeyDown }) {\r\n    let mailRef = useRef()\r\n    let focusRef = useRef()\r\n    useEffect(() => {\r\n        focusRef.current.focus()\r\n    }, [])\r\n    function copy() {\r\n        mailRef.current.select()\r\n        document.execCommand('copy')\r\n        focusRef.current.focus()\r\n    }\r\n    return (\r\n        <div className='card' onKeyDown={onKeyDown}>\r\n            <Wrapper>\r\n                <Wrapper>\r\n                    <div className=\"close\"\r\n                        ref={focusRef}\r\n                        tabIndex={0}\r\n                        onClick={toggle} ><p>✖</p></div>\r\n                    <div className=\"line\">\r\n                        <p><span>👨‍🦱</span>Jose Barrientos</p>\r\n                    </div>\r\n                    <div className=\"line\">\r\n                        <p><span>🏡</span>Ciudad Autónoma de Buenos Aires, Argentina</p>                    </div>\r\n                    <div className=\"line\">\r\n                        <p>\r\n                            <span>📧</span>\r\n                            <a href=\"mailto:jb.barrientos@yahoo.com\">\r\n                                <input type=\"text\" defaultValue=\"jb.barrientos@yahoo.com\" ref={mailRef} />\r\n                            </a>\r\n                        </p>\r\n                    </div>\r\n                    <Copy onClick={copy} >\r\n                        <p>{copyLang}</p>\r\n                    </Copy>\r\n                </Wrapper>\r\n            </Wrapper>\r\n        </div >\r\n    )\r\n}\r\n\r\n","//https://stackoverflow.com/questions/45514676/react-check-if-element-is-visible-in-dom\r\nimport { useEffect, useMemo, useState } from 'react'\r\n\r\nexport default function useOnScreen(ref) {\r\n    const [isIntersecting, setIntersecting] = useState(false)\r\n    const observer = useMemo(() => new IntersectionObserver(\r\n        ([entry]) => setIntersecting(entry.isIntersecting),\r\n        { threshold: .5 }\r\n    ), [])\r\n    useEffect(() => {\r\n        observer.observe(ref.current)\r\n        return () => { observer.disconnect() }\r\n    }, [observer, ref])\r\n    return isIntersecting\r\n}\r\n","import { useState, useRef, useEffect, useContext } from \"react\";\r\nimport Slide from \"../common/Slide\";\r\nimport Button from \"./Button\";\r\nimport Card from \"./Card\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\nimport text from \"./text.json\"\r\nimport { Context } from \"../common/Context\";\r\n\r\nexport default function Contact() {\r\n    let [show, setShow] = useState(false)\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    let { current } = useContext(Context).language\r\n\r\n    useEffect(() => {\r\n        if (!shown && isVisible) {\r\n            setShown(true)\r\n        }\r\n    }, [shown, isVisible])\r\n    let toggleCard = () => setShow(!show)\r\n    let exitCard = () => setShow(false)\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!isVisible && !shown ? \"transparent\" : 'contact'}>\r\n                <Button><a href={text.cv[current]}><p>Resume</p></a></Button>\r\n                <Button >\r\n                    <a\r\n                        rel=\"noopener noreferrer\"\r\n                        target=\"_blank\"\r\n                        href=\"http://classicaljo.github.io/projects\">\r\n                        <p>{text.projects[current]}</p>\r\n                    </a>\r\n                </Button>\r\n                <Button onClick={toggleCard}>\r\n                    <p tabIndex={0} onKeyDown={e => e.key === 'Enter' && toggleCard()} >{text.contact[current]}</p>\r\n                </Button>\r\n                {show && (\r\n                    <Card\r\n                        copyLang={text.copy[current]}\r\n                        toggle={toggleCard}\r\n                        onKeyDown={e => e.key === 'Escape' && exitCard()}\r\n                    />\r\n                )}\r\n            </div>\r\n        </Slide>\r\n    )\r\n}\r\n","import { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { Context } from \"../common/Context\";\r\nimport Slide from \"../common/Slide\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\nimport Wrapper from \"../common/Wrapper\";\r\nimport text from './text.json'\r\n\r\nexport default function Home() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    let { current } = useContext(Context).language\r\n    let { title, subtitle } = text\r\n    useEffect(() => {\r\n        if (!shown && isVisible) {\r\n            setShown(true)\r\n        }\r\n    }, [shown, isVisible])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!shown && !isVisible ? \"transparent\" : 'home'}>\r\n                <Wrapper>\r\n                    <p className={`${current} title`}>\r\n                        {title[current]}\r\n                    </p>\r\n                    <p className={`${current} subtitle`}>\r\n                        {subtitle[current]}\r\n                    </p>\r\n                </Wrapper>\r\n            </div>\r\n        </Slide >\r\n    )\r\n}\r\n","export class Swirl {\r\n    constructor(rx, ry, originCanvas) {\r\n        this.canvas = this.createCanvas(originCanvas)\r\n        this.rx = rx\r\n        this.ry = ry\r\n        this.translateCenter()\r\n        this.draw(this.canvas)\r\n    }\r\n    color(x, y, col) {\r\n        let ctx = this.canvas.getContext('2d')\r\n        let maxR = Math.max(this.rx, this.ry)\r\n        let grad = ctx.createRadialGradient(x, y, 1e-1, x, y, maxR * 4)\r\n        grad.addColorStop(0, col)\r\n        grad.addColorStop(1, \"rgba(255,255,255,0)\")\r\n        ctx.fillStyle = grad\r\n        let max = Math.max(this.canvas.width, this.canvas.height)\r\n        ctx.fillRect(this.canvas.width / -2, this.canvas.height / -2, max, max)\r\n    }\r\n    draw() {\r\n        let colors = [\r\n            \"hsla(0,100%,65%,.15)\",\r\n            \"hsla(120,100%,65%,.15)\",\r\n            \"hsla(240,100%,65%,.15)\"\r\n        ]\r\n        for (let i = 0; i < 3; i++) {\r\n            let unit = i * Math.PI * 2 / 3\r\n            let r = Math.max(this.rx, this.ry)\r\n            this.color(Math.cos(unit) * r, Math.sin(unit) * r, colors[i])\r\n        }\r\n    }\r\n    createCanvas(origin) {\r\n        let canvas = document.createElement(\"canvas\")\r\n        let max = Math.max(origin.width, origin.height)\r\n        canvas.width = max\r\n        canvas.height = max\r\n        return canvas\r\n    }\r\n    translateCenter(){\r\n        let ctx = this.canvas.getContext('2d')\r\n        ctx.translate(this.canvas.width / 2, this.canvas.height / 2)\r\n    }\r\n}\r\n","import { Swirl } from './swirl'\r\nlet ease = x => Math.sin((x * Math.PI) / 2)\r\n\r\nexport class Hex {\r\n    constructor(rx, ry, values = [1, 1, 1, 1, 1, 1], originCanvas) {\r\n        this.values = values\r\n        this.origin = originCanvas\r\n        this.rx = rx\r\n        this.ry = ry\r\n        this.time = 0\r\n        this.lifetime = 0\r\n        this.totalTime = 48\r\n        this.vertices = this.setVertices()\r\n        this.lineOpacity = 0\r\n        this.background = new Swirl(this.rx, this.ry, originCanvas).canvas\r\n    }\r\n    setVertices() {\r\n        return new Array(6)\r\n            .fill(\"\")\r\n            .map((k, i) => Math.PI * 2 / 6 * i + Math.PI / 2)\r\n            .map((vertex, i) => this.getPosition(\r\n                vertex,\r\n                this.animatedRadius(this.rx),\r\n                this.ry\r\n            ))\r\n    }\r\n    animatedRadius(r) {\r\n        return ease(this.time / this.totalTime) * r\r\n    }\r\n    getPosition(angle, rx, ry) {\r\n        return { x: rx * Math.cos(angle), y: ry * Math.sin(angle) }\r\n    }\r\n    color(x, y, col, ctx) {\r\n        ctx.beginPath()\r\n        this.vertices.forEach((k, i) => ctx.lineTo(k.x * this.values[i], k.y * this.values[i]))\r\n        ctx.lineTo(this.vertices[0].x * this.values[0], this.vertices[0].y * this.values[0])\r\n        let grad = ctx.createRadialGradient(x, y, 2 * Math.max(this.rx, this.ry), x, y, 2 * Math.max(this.rx, this.ry) / 10)\r\n        grad.addColorStop(.2, \"rgba(255,255,255,0)\")\r\n        grad.addColorStop(1, col)\r\n        ctx.fillStyle = grad\r\n        ctx.fill()\r\n    }\r\n    lines(ctx) {\r\n        ctx.beginPath()\r\n        this.vertices.forEach(k => ctx.lineTo(k.x, k.y))\r\n        ctx.lineTo(this.vertices[0].x, this.vertices[0].y)\r\n        ctx.setLineDash([350, 200])\r\n        ctx.strokeStyle = `rgba(0,0,0,${this.lineOpacity / 100})`\r\n        ctx.lineDashOffset = -this.lifetime * 2.5\r\n        ctx.lineWidth = 3\r\n        ctx.stroke()\r\n    }\r\n    web(ctx) {\r\n        ctx.setLineDash([10, 5])\r\n        ctx.strokeStyle = `rgba(0,0,0,${this.lineOpacity / 100})`\r\n        ctx.lineDashOffset = this.lifetime / 4\r\n        ctx.lineWidth = .3\r\n        for (let int = 0; int < 5; int++) {\r\n            ctx.beginPath()\r\n            let webMap = this.vertices.map(k => ({\r\n                x: k.x * (int / 5),\r\n                y: k.y * (int / 5)\r\n            }))\r\n            webMap.forEach(k => ctx.lineTo(k.x, k.y))\r\n            ctx.lineTo(webMap[0].x, webMap[0].y)\r\n            ctx.stroke()\r\n        }\r\n\r\n        this.vertices.forEach(k => {\r\n            ctx.beginPath()\r\n            ctx.moveTo(0, 0)\r\n            ctx.lineTo(k.x, k.y)\r\n            ctx.stroke()\r\n        })\r\n    }\r\n    words(ctx) {\r\n        let names = ['UI/UX', 'Javascript', 'ReactJS', 'Express', 'PostgreSQL', \"NextJS\"]\r\n        ctx.font = '18px Josefin Sans'\r\n        names.forEach((k, i) => {\r\n            let show = this.lifetime > 10 * i + this.totalTime\r\n            let cycle = Math.min((this.lifetime - 10 * i - this.totalTime) / 100, 1)\r\n            let opacity = show ? ease(cycle) : 0\r\n            let index = (i + 2) % 6\r\n            let { x, y } = this.vertices[index]\r\n            if (y > 0) y += 40\r\n            if (y < 0) y += -25\r\n            ctx.textAlign = 'center'\r\n\r\n            ctx.fillStyle = `rgba(0,0,0,${opacity})`\r\n\r\n            ctx.fillText(k, x, y)\r\n        })\r\n    }\r\n    swirl(ctx){\r\n        let memCanvas = document.createElement('canvas')\r\n        let memCtx = memCanvas.getContext('2d')\r\n        let [WIDTH, HEIGHT] = [this.origin.width, this.origin.height]\r\n        let [W2, H2] = [WIDTH / 2, HEIGHT / 2]\r\n        memCanvas.width = WIDTH\r\n        memCanvas.height = HEIGHT\r\n        memCtx.translate(W2, H2)\r\n        memCtx.save()\r\n        memCtx.rotate(this.lifetime * Math.PI / 180)\r\n        memCtx.drawImage(this.background, this.background.width / -2, this.background.height / -2, this.background.width, this.background.height)\r\n        memCtx.restore()\r\n        memCtx.globalCompositeOperation = 'destination-in'\r\n        this.vertices.forEach((k, i) => memCtx.lineTo(k.x * this.values[i], k.y * this.values[i]))\r\n        memCtx.fillStyle = \"rgba(0,0,0,1)\"\r\n        memCtx.fill()\r\n\r\n        ctx.drawImage(memCanvas, -W2, -H2)\r\n    }\r\n    render(ctx) {\r\n        this.swirl(ctx)\r\n        this.web(ctx)\r\n        this.lines(ctx)\r\n        this.words(ctx)\r\n\r\n    }\r\n    update() {\r\n        if (this.time < this.totalTime) {\r\n            this.vertices = this.setVertices()\r\n            this.time++\r\n        } else if (this.lineOpacity < 20) this.lineOpacity++\r\n\r\n\r\n        this.lifetime++\r\n    }\r\n}\r\n\r\n","export class Title {\r\n    constructor(x, y, text, align = 'center') {\r\n        this.text = text\r\n        this.pos = { x, y }\r\n        this.align = align\r\n    }\r\n    update() {\r\n        return\r\n    }\r\n    render(ctx) {\r\n        ctx.fillStyle = \"rgba(0,0,0,1)\"\r\n        ctx.font = '24px Josefin Sans'\r\n        ctx.textAlign = this.align\r\n        ctx.fillText(this.text, this.pos.x, this.pos.y)\r\n    }\r\n}\r\n","import { useLayoutEffect, useRef } from \"react\";\r\nimport { animation } from \"./animation\"\r\nimport { Context } from \"../common/Context\"\r\nimport { useContext } from \"react\"\r\nimport text from './text.json'\r\n\r\nexport default function Hexagon({ ready }) {\r\n    let canvasRef = useRef()\r\n    let [width, height] = [506.25, 900]\r\n    let { language } = useContext(Context)\r\n\r\n    useLayoutEffect(() => {\r\n        let swirl = animation(canvasRef.current, language.current)\r\n        let frame;\r\n        function animate() {\r\n            frame = requestAnimationFrame(() => {\r\n                swirl.update()\r\n                swirl.render()\r\n                animate()\r\n            })\r\n        }\r\n        if (ready) animate()\r\n        return () => cancelAnimationFrame(frame)\r\n    }, [ready, language])\r\n\r\n    return (\r\n        <canvas\r\n            role=\"img\"\r\n            aria-label={text.description}\r\n            ref={canvasRef} {...{ width, height }}\r\n        />\r\n    )\r\n}\r\n","import { Hex } from \"./hex.js\"\r\nimport { Title } from \"./title.js\"\r\nimport text from './text.json'\r\nexport const animation = (canvas, language) => {\r\n    let ctx = canvas.getContext('2d')\r\n    let verticalMargin = 150\r\n    let horizontalMargin = 0\r\n    let height = canvas.height - verticalMargin * 2\r\n    let width = canvas.width - horizontalMargin * 2\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n    ctx.translate(width / 2 + horizontalMargin, height / 2 + verticalMargin)\r\n    \r\n\r\n    return ({\r\n        bodies: [\r\n            new Hex(width / 2, height / 2, [.6, .8, .6, 1, .9, .7], canvas),\r\n            new Title(0, canvas.height / -2 + 48, text.title[language])\r\n        ],\r\n        update: function () {\r\n            this.bodies.forEach(k => k.update())\r\n        },\r\n        render: function () {\r\n            let { width, height } = canvas\r\n            let ctx = canvas.getContext('2d')\r\n            ctx.fillStyle = \"rgba(255,255,255,0.1)\"\r\n            ctx.fillRect(width / -2, height / -2, width, height)\r\n            this.bodies.forEach(k => k.render(ctx))\r\n        }\r\n    })\r\n}\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport Slide from \"../common/Slide\";\r\nimport useOnScreen from \"../common/useOnScreen\";\r\nimport Hexagon from \"./Hexagon\";\r\n\r\nexport default function Skills() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) setShown(true)\r\n    }, [isVisible, shown])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!shown && !isVisible ? \"transparent\" : 'skills'}>\r\n                <Hexagon ready={shown} />\r\n            </div>\r\n\r\n        </Slide>\r\n    )\r\n}\r\n","export class Title {\r\n    constructor(x, y, text, align = 'center') {\r\n        this.text = text\r\n        this.pos = { x, y }\r\n        this.align = align\r\n    }\r\n    update() {\r\n        return\r\n    }\r\n    render(ctx) {\r\n        ctx.fillStyle = \"rgba(0,0,0,1)\"\r\n        ctx.font = '24px Josefin Sans'\r\n        ctx.textAlign = this.align\r\n        ctx.fillStyle = `rgba(230,230,100, 1)`\r\n        ctx.strokeStyle = \"black\"\r\n        ctx.fillText(this.text, this.pos.x, this.pos.y)\r\n        ctx.strokeText(this.text, this.pos.x, this.pos.y)\r\n    }\r\n}\r\n","let ease = x => 1 - Math.pow(1 - x, 4);\r\nexport class Tag {\r\n    constructor(tag, height, size) {\r\n        this.tag = tag\r\n        this.size = size\r\n        this.canvasHeight = height\r\n        this.fontSize = 22 + 5 * this.size\r\n        this.pos = { x: 0, y: 0 }\r\n    }\r\n    setPosition(x, y) {\r\n        this.pos = { x, y }\r\n    }\r\n    render(ctx) {\r\n        ctx.font = this.fontSize + \"px Josefin Sans\"\r\n        let opacity = Math.min(Math.abs(this.canvasHeight + this.pos.y), Math.abs(this.canvasHeight - this.pos.y), 100) / 100\r\n        ctx.fillStyle = `rgba(230,230,100, ${ease(opacity)})`\r\n        ctx.strokeStyle = \"black\"\r\n        ctx.lineWidth=\".3\"\r\n        ctx.fillText(this.tag, this.pos.x, this.pos.y)\r\n        ctx.strokeText(this.tag, this.pos.x, this.pos.y)\r\n\r\n    }\r\n    update() {\r\n        this.pos.y++\r\n        return this.pos.y > this.canvasHeight\r\n    }\r\n}\r\n","import { Tag } from \"./tag.js\"\r\n\r\nexport class Cloud {\r\n    constructor(width, height, tags) {\r\n        this.width = width\r\n        this.height = height\r\n        this.tags = tags\r\n        this.bodies = []\r\n        this.nobodies = []\r\n        this.fontSize = 22\r\n        this.marginSize = 20\r\n        this.makeTags(this.tags)\r\n        this.setTags()\r\n    }\r\n    pushBody(k, n) {\r\n        this.bodies.push(new Tag(k, this.height, n))\r\n    }\r\n    makeTags(arr, acc = 0) {\r\n        if (arr instanceof Array) return arr.forEach(k => this.pushBody(k, 1))\r\n        Object.keys(arr).forEach(k => {\r\n            this.pushBody(k, 3 - acc)\r\n            this.makeTags(arr[k], acc + 1)\r\n        })\r\n    }\r\n    setTags() {\r\n        let total = 0\r\n        let { marginSize, fontSize } = this\r\n        for (let i = 0; i < this.bodies.length; i++) {\r\n            if (total < this.height * 2) {\r\n                this.bodies[i].setPosition(0, this.height - total)\r\n                total += this.bodies[i].size * marginSize + fontSize + this.bodies[i + 1].size * marginSize\r\n            }\r\n            else return this.nobodies = this.bodies.splice(i)\r\n        }\r\n    }\r\n    render(ctx) {\r\n        this.bodies.forEach(k => k.render(ctx))\r\n    }\r\n    update() {\r\n        let uppermost = this.bodies[this.bodies.length - 1]\r\n        let lowermost = this.nobodies[0]\r\n        let { fontSize, marginSize } = this\r\n        if (this.height + uppermost.pos.y > fontSize + uppermost.size * marginSize + lowermost.size * marginSize) {\r\n            let tag = this.nobodies.shift()\r\n            tag.setPosition(0, -this.height)\r\n            this.bodies.push(tag)\r\n        }\r\n        this.bodies.forEach((k, i) => {\r\n            let hide = k.update()\r\n            if (hide) {\r\n                let body = this.bodies.splice(i, 1)\r\n                this.nobodies.push(body[0])\r\n            }\r\n        })\r\n    }\r\n}\r\n","import { useRef, useLayoutEffect, useContext } from \"react\"\r\nimport { Context } from \"../common/Context\"\r\nimport { cloud } from \"./animation\"\r\n\r\nexport default function Chart({ tags }) {\r\n    let canvasRef = useRef()\r\n    let [width, height] = [506.25, 900]\r\n    let { language } = useContext(Context)\r\n    useLayoutEffect(() => {\r\n        let galaxy = cloud(canvasRef.current, tags, language.current)\r\n        let animation;\r\n        function animate() {\r\n            animation = requestAnimationFrame(() => {\r\n                galaxy.update()\r\n                galaxy.render()\r\n                animate()\r\n            })\r\n        }\r\n        animate()\r\n        return () => cancelAnimationFrame(animation)\r\n    }, [tags, language])\r\n    return (\r\n        <canvas\r\n            role='img'\r\n            aria-label={JSON.stringify(tags)}\r\n            ref={canvasRef} {...{ width, height }}\r\n        />\r\n    )\r\n}\r\n","import { Title } from \"./title\"\r\nimport { Cloud } from \"./cloud\"\r\nimport text from './text.json'\r\nexport const cloud = (canvas, tags, language) => {\r\n    let ctx = canvas.getContext('2d')\r\n    let verticalMargin = 150\r\n    let horizontalMargin = 0\r\n    let height = canvas.height - verticalMargin * 2\r\n    let width = canvas.width - horizontalMargin * 2\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0)\r\n    ctx.translate(width / 2 + horizontalMargin, height / 2 + verticalMargin)\r\n    return ({\r\n        bodies: [\r\n            new Cloud(width / 2, height / 2, tags),\r\n            new Title(0, canvas.height / -2 + 72, text.title[language]),\r\n\r\n        ],\r\n        update: function () {\r\n            this.bodies.forEach(k => k.update())\r\n        },\r\n        render: function () {\r\n            let ctx = canvas.getContext('2d')\r\n            ctx.font = \"22px Josefin Sans\"\r\n            ctx.fillStyle = \"rgba(30,30,30,1)\"\r\n            ctx.fillRect(canvas.width / -2, canvas.height / -2, canvas.width, canvas.height)\r\n            this.bodies.forEach(k => k.render(ctx))\r\n        }\r\n    })\r\n}\r\n","import { useRef, useState, useEffect } from 'react'\r\nimport Slide from \"../common/Slide\";\r\nimport Chart from \"./Chart\";\r\nimport useOnScreen from '../common/useOnScreen';\r\n\r\nexport default function Tags() {\r\n    let ref = useRef()\r\n    let isVisible = useOnScreen(ref)\r\n    let [shown, setShown] = useState(false)\r\n    useEffect(() => {\r\n        if (!shown && isVisible) setShown(true)\r\n    }, [shown, isVisible])\r\n    return (\r\n        <Slide>\r\n            <div ref={ref} className={!isVisible && !shown ? 'galaxy transparent' : 'galaxy tags'}>\r\n                <Chart tags={tags} />\r\n            </div>\r\n        </Slide>\r\n    )\r\n}\r\n\r\nconst tags = {\r\n    \"JS\": {\r\n        \"React\": [\"Class components\", \"Functional components\", \"Hooks\", \"Component lifecycle\", \"Webpack\", \"Babel\", \"Redux\"],\r\n        \"CSS\": [\"Box model\", \"Flexbox\", \"Grid\", \"SASS\", \"Modularity\", \"Reusability\", \"Media queries\", \"Material-UI\", \"Bootstrap\", \"Styled components\"],\r\n        \"Node\": [\"Express\", \"Postman\", \"JWT\", \"WebSockets\", \"Socket.io\", \"NextJS\", \"REST\", \"PostgreSQL\", \"Authentication\"],\r\n    }\r\n}\r\n\r\n","import Slide from \"./Slide\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <Slide>\r\n            <div className=\"loading\">\r\n                <svg width='200' height='200' viewBox=\"-75 -75 150 150\">\r\n                    <Circle x={-2} y={-10} color={\"cyan\"} />\r\n                    <Circle x={2} y={-10} color={\"red\"} />\r\n                    <Circle x={0} y={-10} color={\"black\"} />\r\n                </svg>\r\n            </div>\r\n        </Slide>\r\n\r\n    )\r\n}\r\n\r\nfunction Circle({ x, y, color }) {\r\n    return (\r\n        <circle\r\n            r=\"5\"\r\n            cx={x}\r\n            cy={y}\r\n            strokeWidth=\"5\"\r\n            fill={color}\r\n        >\r\n            <animateTransform\r\n                attributeName='transform'\r\n                type='rotate'\r\n                from=\"0 0 0\"\r\n                to=\"360 0 0\"\r\n                repeatCount='indefinite'\r\n                dur='2s'\r\n                calcMode='linear'\r\n            />\r\n        </circle>)\r\n}\r\n","export function switcher(canvas, language, options) {\r\n    let config = {\r\n        totalFrames: 10,\r\n        buttonSize: { width: canvas.width / 2, height: canvas.height },\r\n        positions: { 0: 0, 1: canvas.width / 2 },\r\n        animating: false,\r\n        values: ['en', 'es'],\r\n        onStart: () => { },\r\n        onEnd: () => { },\r\n        ...options\r\n    }\r\n\r\n    let ctx = canvas.getContext('2d')\r\n    let { positions, buttonSize, onEnd, values, totalFrames } = config\r\n    let [W, H] = [canvas.width, canvas.height]\r\n    let [W2, H2] = [W / 2, H / 2]\r\n    let pos = { x: positions[values.indexOf(language)], y: 0 }\r\n    let direction = pos.x < W2 ? 1 : -1\r\n    let progress = () => pos.x / W2\r\n    let background = function () {\r\n        ctx.fillStyle = 'hsl(0,0%,96%)'\r\n        ctx.fillRect(0, 0, W, H)\r\n    }\r\n    let button = function () {\r\n        ctx.fillStyle = `hsl(0,0%, ${progress() * 100}%)`\r\n        ctx.fillRect(pos.x, pos.y, buttonSize.width, buttonSize.height)\r\n    }\r\n    let border = function () {\r\n        ctx.strokeStyle = 'rgba(0,0,0,0.1)'\r\n        ctx.strokeRect(pos.x, pos.y, W2, H)\r\n        ctx.strokeRect(0, 0, W, H)\r\n    }\r\n\r\n    let draw = function () {\r\n        ctx.clearRect(0, 0, W, H)\r\n        background()\r\n        button()\r\n        border()\r\n    }\r\n\r\n    let drawText = function (text) {\r\n        ctx.font = \"24px Josefin Sans\"\r\n        ctx.textAlign = 'center'\r\n        ctx.textBaseline = 'middle'\r\n        ctx.fillStyle = `hsl(0,0%, ${Math.abs(-100 + progress() * 100)}%)`\r\n        ctx.fillText(text, pos.x + W2 / 2, H2, W2)\r\n    }\r\n\r\n    let update = function () {\r\n        let sx = W2 / totalFrames\r\n        pos.x += sx * direction\r\n    }\r\n    let animate = function (frames) {\r\n        update()\r\n        draw()\r\n        if (frames > 1) requestAnimationFrame(() => animate(frames - 1))\r\n        else onEnd()\r\n    }\r\n\r\n    draw()\r\n    drawText(language)\r\n\r\n    return {\r\n        isAnimating: function () {\r\n            return config.animating\r\n        },\r\n        toggle: function () {\r\n            config.animating = true\r\n            animate(totalFrames)\r\n        }\r\n\r\n    }\r\n}\r\n","import { useRef, useLayoutEffect, useContext } from 'react'\r\nimport { Context } from '../common/Context.jsx'\r\nimport { switcher } from './switch/index.js'\r\nexport default function Switch({ width, height, tabIndex }) {\r\n    let ref = useRef()\r\n    let { language } = useContext(Context)\r\n    useLayoutEffect(() => {\r\n        let canvas = ref.current\r\n        let toggler = switcher(canvas, language.current, {\r\n            onEnd: language.toggle\r\n        })\r\n        let changeLanguage = () => !toggler.isAnimating() && toggler.toggle()\r\n        let keyDown = e => e.key === 'Enter' && changeLanguage()\r\n        canvas.addEventListener('click', changeLanguage)\r\n        canvas.addEventListener('keydown', keyDown)\r\n        return () => (\r\n            canvas.removeEventListener('click', changeLanguage) &&\r\n            canvas.removeEventListener('keydown', keyDown)\r\n        )\r\n    }, [language])\r\n\r\n    return (\r\n        <canvas\r\n            className='language'\r\n            tabIndex={1}\r\n            style={{ width, height }}\r\n            {...{ ref, width, height, tabIndex }}\r\n        />\r\n    )\r\n}\r\n","export default function CV({ scroll, tabIndex, width, height }) {\r\n    return (\r\n        <div\r\n            tabIndex={tabIndex}\r\n            className=\"cv\"\r\n            onKeyDown={e => e.key === 'Enter' && scroll()}\r\n            onClick={scroll}\r\n            style={{\r\n                width, height,\r\n                border: \"1px solid rgba(0,0,0,0.1)\",\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                display: 'flex',\r\n                background: 'white',\r\n                color: 'black',\r\n                boxSizing: 'border-box',\r\n                fontSize: \"24px\"\r\n\r\n            }}\r\n        >\r\n            <p>cv</p>\r\n        </div>\r\n\r\n    )\r\n}\r\n","import { Context } from \"../common/Context\"\r\nimport { useContext } from \"react\"\r\nimport Switch from \"./Switch.jsx\"\r\nimport CV from \"./CV\"\r\n\r\nexport default function Header() {\r\n    let { scroll, language } = useContext(Context)\r\n    return (\r\n        <div className='header' >\r\n            <CV\r\n                tabIndex={1}\r\n                width={100}\r\n                height={50}\r\n                scroll={scroll}\r\n                language={language.current}\r\n            />\r\n            <Switch\r\n                width={100}\r\n                height={50}\r\n                tabIndex={2}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Contact from \"../contact/Contact\";\r\nimport Home from \"../home/Home\";\r\nimport Skills from \"../skills/Skills\";\r\nimport Tags from \"../tags/Tags\";\r\nimport Loading from \"./Loading\";\r\nimport WebFont from \"webfontloader\";\r\nimport Header from '../header/Header'\r\n\r\nexport default function Loader({ element }) {\r\n    let [ready, setReady] = useState(false)\r\n    let [done, setDone] = useState(false)\r\n    useEffect(() => {\r\n        WebFont.load({\r\n            google: {\r\n                families: ['Josefin Sans'],\r\n            },\r\n            active: () => setReady(true)\r\n        })\r\n        let timeout = setTimeout(() => setDone(true), 500)\r\n        return () => clearTimeout(timeout)\r\n    }, [])\r\n    switch (ready && done) {\r\n        case true: return (\r\n            <>\r\n                <Home />\r\n                <Skills />\r\n                <Tags />\r\n                <Contact />\r\n                <Header element={element} />\r\n            </>\r\n        );\r\n        default: return <Loading />\r\n    }\r\n}\r\n","import { useRef } from 'react'\r\nimport { Context } from './Context'\r\nimport Loader from './Loader'\r\nimport useLanguage from './useLanguage'\r\n\r\nexport default function Container() {\r\n    let ref = useRef()\r\n    let language = useLanguage()\r\n    let scroll = () => window.scroll({ top: ref.current.scrollHeight, behavior: \"smooth\" })\r\n    return (\r\n        <Context.Provider value={{ scroll, language }}>\r\n            <div ref={ref} className=\"container\">\r\n                <Loader element={ref} />\r\n            </div>\r\n        </Context.Provider>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function useLanguage() {\r\n    let preferred = navigator.language.slice(0, 2)\r\n    let available = ['es', 'en']\r\n    let language = available.includes(preferred) ? preferred : 'en'\r\n    let [current, setCurrent] = useState(language)\r\n    let switcher = {\r\n        \"es\": 'en',\r\n        \"en\": 'es'\r\n    }\r\n    let toggle = () => setCurrent(switcher[current])\r\n    return { current, toggle }\r\n}\r\n","import Container from \"./common/Container\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './assets/css/_app.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}